#include <stdio.h>

int main() {
    int n;

    // Step 1: Take user input for the number of elements
    printf("Enter the number of elements: ");
    scanf("%d", &n);

    int arr[n], temp[n];  // Declare the main array and a temporary array

    // Step 2: Take user input for array elements
    printf("Enter %d elements:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    // Step 3: Implement iterative Merge Sort (Bottom-Up Approach)
    for (int size = 1; size < n; size *= 2) { // Increase the size of subarrays
        for (int left = 0; left < n - 1; left += 2 * size) { // Iterate over subarrays
            int mid = left + size - 1;
            int right = (left + 2 * size - 1 < n - 1) ? (left + 2 * size - 1) : (n - 1);

            // Step 4: Merge two sorted subarrays
            int i = left, j = mid + 1, k = left;
            while (i <= mid && j <= right) {
                if (arr[i] <= arr[j]) {
                    temp[k++] = arr[i++];
                } else {
                    temp[k++] = arr[j++];
                }
            }

            // Copy remaining elements from left half (if any)
            while (i <= mid) {
                temp[k++] = arr[i++];
            }

            // Copy remaining elements from right half (if any)
            while (j <= right) {
                temp[k++] = arr[j++];
            }

            // Step 5: Copy sorted values back to original array
            for (i = left; i <= right; i++) {
                arr[i] = temp[i];
            }
        }
    }

    // Step 6: Print the sorted array
    printf("Sorted array:\n");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
